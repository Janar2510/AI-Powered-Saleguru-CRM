version: '3.8'

services:
  # PostgreSQL Database (Supabase compatible)
  postgres:
    image: supabase/postgres:15.1.0.117
    container_name: supabase-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
    ports:
      - "54322:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d/migrations:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgREST API Server
  postgrest:
    image: postgrest/postgrest:v11.2.2
    container_name: supabase-postgrest
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgresql://postgres:postgres@postgres:5432/postgres
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_JWT_SECRET: "your-super-secret-jwt-token-with-at-least-32-characters-long"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

  # Supabase Auth (GoTrue)
  gotrue:
    image: supabase/gotrue:v2.102.0
    container_name: supabase-auth
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
      GOTRUE_SITE_URL: http://localhost:3002
      GOTRUE_URI_ALLOW_LIST: "*"
      GOTRUE_JWT_SECRET: "your-super-secret-jwt-token-with-at-least-32-characters-long"
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
      GOTRUE_MAILER_AUTOCONFIRM: "true"
      GOTRUE_SMTP_ADMIN_EMAIL: admin@example.com
      GOTRUE_SMTP_HOST: localhost
      GOTRUE_SMTP_PORT: 587
      GOTRUE_SMTP_USER: ""
      GOTRUE_SMTP_PASS: ""
    ports:
      - "9999:9999"
    depends_on:
      postgres:
        condition: service_healthy

  # Supabase Storage
  storage:
    image: supabase/storage-api:v0.40.4
    container_name: supabase-storage
    restart: unless-stopped
    environment:
      ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      POSTGREST_URL: http://postgrest:3000
      PGRST_JWT_SECRET: "your-super-secret-jwt-token-with-at-least-32-characters-long"
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
      PGOPTIONS: "-c search_path=storage,public"
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
    ports:
      - "5000:5000"
    volumes:
      - storage_data:/var/lib/storage
    depends_on:
      postgres:
        condition: service_healthy

  # Migration Runner (runs once)
  migrator:
    image: postgres:15
    container_name: supabase-migrator
    environment:
      PGPASSWORD: postgres
    volumes:
      - ./supabase/migrations:/migrations:ro
      - ./scripts/run-migrations.sh:/run-migrations.sh:ro
    command: /run-migrations.sh
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  storage_data:
    driver: local

networks:
  default:
    name: supabase_network


